// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using task4;

#nullable disable

namespace task4.Migrations
{
    [DbContext(typeof(PtpippContext))]
    partial class PtpippContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("task4.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Fio")
                        .HasColumnType("text")
                        .HasColumnName("fio");

                    b.Property<int>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("sport_id");

                    b.HasKey("Id")
                        .HasName("member_pkey");

                    b.HasIndex("SportId");

                    b.ToTable("member", (string)null);
                });

            modelBuilder.Entity("task4.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MinYear")
                        .HasColumnType("integer")
                        .HasColumnName("min_year");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("sport_pkey");

                    b.ToTable("sport", (string)null);
                });

            modelBuilder.Entity("task4.Member", b =>
                {
                    b.HasOne("task4.Sport", "Sport")
                        .WithMany("Members")
                        .HasForeignKey("SportId")
                        .IsRequired()
                        .HasConstraintName("member_sport_id_fkey");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("task4.Sport", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
